{"version":3,"sources":["redux/dialogsReducer.js","components/Navbar/Navbar.module.css","utils/validators.js","assets/preloader.gif","components/common/Preloader/Preloader.jsx","utils/stringHelpers.js","api/api.js","redux/authReducer.js","assets/imgs/user.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","redux/profileReducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileForm.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Settings/Settings.jsx","utils/objectHelpers.js","redux/usersReducer.js","components/Users/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","redux/appReducer.js","redux/reduxStore.js","App.js","components/common/HOC/withSuspect.jsx","reportWebVitals.js","index.js","components/common/HOC/withAuthRedirect.jsx","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.jsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Paginator/Paginator.module.css","components/Users/User/User.module.css"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessage","text","type","resetDialogForm","dispatch","resetForm","dialogsReducer","state","action","newMessage","length","module","exports","required","value","maxLengthCreator","Preloader","src","preloader","firstLetterToLowerCase","string","charAt","toLowerCase","slice","axiosInstance","axios","create","baseURL","withCredentials","headers","getErrors","errorMessages","reduce","acc","errorText","includes","split","fieldText","error","reverse","map","fieldPart","index","_","merge","_error","usersAPI","pageNumber","pageSize","get","then","response","data","userId","post","delete","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","savePhoto","file","formData","FormData","append","updateData","profileData","authAPI","securityAPI","alert","SET_AUTH_DATA","GET_CAPTCHA_URL_SUCCESS","email","login","photo","isAuth","captchaUrl","setAuthData","payload","getAuthUserData","a","resultCode","photos","small","getCaptchaUrl","url","authReducer","Header","props","className","s","header","logo","authBlock","to","userImg","onClick","logout","HeaderContainer","this","React","Component","compose","connect","auth","withRouter","maxLength30","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","createField","Input","placeholder","textAfter","styles","commonError","stopSubmit","withAuthRedirect","Navbar","nav","item","activeClassName","active","ADD_POST","SET_USER_PROFILE","SET_PROFILE_STATUS","FETCHING_USER_PROFILE","SET_CURRENT_USER_ID","SAVE_PHOTO_SUCCESS","TOGGLE_PROFILE_DATA_EDIT_MODE","posts","likesCount","profile","isFetchingUserProfile","currentUserId","profileDataEditMode","setProfileStatus","fetchingUserProfile","isFetching","toggleProfileDataEditMode","getUserProfile","profileReducer","newPost","Post","img","maxLength5","Textarea","MyPosts","memo","addPost","resetPostForm","postsBlock","postText","ProfileData","goToEditMode","isOwner","contacts","Object","entries","filter","aboutMe","lookingForAJob","lookingForAJobDescription","contactsList","address","target","href","maxLength100","stylesFormsControls","textBefore","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","toggleEditMode","onChange","e","currentTarget","onBlur","autoFocus","onDoubleClick","ProfileInfo","updateProfileData","isProfileDataLoaded","bannerBlock","descriptionBlock","large","userPhoto","files","fullName","ProfileStatusWithHooks","initialValues","Profile","ProfileContainer","Number","parseInt","match","params","authUserId","setCurrentUserId","getCurrentUserId","getUserData","prevUserId","profilePage","getState","checkedFromData","fixedContacts","contact","checkUpdateProfileFormData","updateObjectInArray","arr","objSearchParam","checkSearchVal","newObjParams","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_PAGE_SIZE","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","currentPage","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","isFollowing","followUnfollowFlow","apiMethod","onSuccess","usersReducer","followed","newUsers","Paginator","totalItemsCount","onChangePageNumber","portionSize","pagesCount","Math","ceil","pages","Array","apply","val","idx","portionsCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","selected","User","user","unfollow","follow","disabled","some","location","country","city","Users","u","getUsers","createSelector","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","items","totalCount","INITIALIZED_SUCCESS","isInitialized","appReducer","reducers","combineReducers","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","AppComponent","catchAllUnhandledErrors","promiseRejectionEvent","reason","initialize","addEventListener","removeEventListener","exact","path","render","fallback","AppComponentContainer","Promise","all","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","mapStateToProps","RedirectComponent","hasProfileUrlUserId","FormControl","meta","children","hasError","touched","formControl","input","restProps","component","validate"],"mappings":"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","file":"static/js/main.2e827bfe.chunk.js","sourcesContent":["import { reset as resetForm } from 'redux-form';\r\n\r\nconst ADD_MESSAGE = 'network/dialogs/ADD-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Alex' },\r\n        { id: 2, name: 'Dmitry' },\r\n        { id: 3, name: 'Sophia' },\r\n        { id: 4, name: 'Sergei' },\r\n        { id: 5, name: 'Irina' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Hi! I\\'m OK!' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            const newMessage = {\r\n                id: state.messages.length + 1,\r\n                message: action.text,\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessage = (text) => ({ type: ADD_MESSAGE, text });\r\n\r\n\r\nexport const resetDialogForm = () => (dispatch) => {\r\n    dispatch(resetForm('dialog'));\r\n};\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3dlwf\",\"item\":\"Navbar_item__1sktZ\",\"active\":\"Navbar_active__29d4m\"};","export const required = (value) => {\r\n    if (!value) return 'This field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (length) => (value) => {\r\n    if (value && value.length > length) return `Max length is ${length} symbols`;\r\n}","export default __webpack_public_path__ + \"static/media/preloader.42990b93.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","export const firstLetterToLowerCase = (string) => `${string.charAt(0).toLowerCase()}${string.slice(1)}`;","import axios from \"axios\";\r\nimport _ from 'lodash';\r\nimport { firstLetterToLowerCase } from './../utils/stringHelpers';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'c1cff70e-7a9f-4edf-8ac3-59091e2abdb2',\r\n    }\r\n});\r\n\r\nexport const getErrors = (errorMessages) => {\r\n    if (errorMessages.length > 0) {\r\n        return errorMessages.reduce(\r\n            (acc, errorText) => {\r\n                if (errorText.includes('(')) {\r\n                    const [message, dirtyFieldText] = errorText.split(' (');\r\n\r\n                    const fieldText = dirtyFieldText.split(')')[0];\r\n                    const error = fieldText.includes('->') ?\r\n                        fieldText.split('->')\r\n                            .reverse()\r\n                            .map(fieldPart => firstLetterToLowerCase(fieldPart))\r\n                            .reduce((acc, fieldPart, index) => (\r\n                                { [fieldPart]: index === 0 ? message : { ...acc } }\r\n                            ), {})\r\n                        : { [firstLetterToLowerCase(fieldText)]: message };\r\n\r\n                    return _.merge({ ...acc }, error);\r\n                }\r\n\r\n                return { ...acc, _error: errorText };\r\n            }, {})\r\n    }\r\n\r\n    return { _error: 'Some error' };\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageNumber = 1, pageSize = 5) {\r\n        return axiosInstance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n            .then((response) => response.data);\r\n    },\r\n\r\n    follow(userId) {\r\n        return axiosInstance.post(`follow/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use ProfileAPI');\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n    getProfileStatus(userId) {\r\n        return axiosInstance.get(`profile/status/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n    updateProfileStatus(status) {\r\n        return axiosInstance.put(`profile/status`, { status })\r\n            .then((response) => response.data);\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        return axiosInstance.put(`profile/photo`, formData, {\r\n            \"headers\": {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }).then((response) => response.data);\r\n    },\r\n    updateData(profileData) {\r\n        return axiosInstance.put(`profile`, profileData)\r\n            .then((response) => response.data);\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return axiosInstance.get(`auth/me`)\r\n            .then((response) => response.data);\r\n    },\r\n    login(formData) {\r\n        return axiosInstance.post(`auth/login`, formData)\r\n            .then((response) => response.data);\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(`auth/login`)\r\n            .then((response) => response.data);\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        try {\r\n            return axiosInstance.get(`security/get-captcha-url`)\r\n                .then((response) => response.data);\r\n        } catch {\r\n            alert('Caught http error while trying getCaptchaUrl()');\r\n        }\r\n    },\r\n};\r\n","import { stopSubmit } from 'redux-form';\r\nimport { authAPI, profileAPI, getErrors, securityAPI } from './../api/api';\r\n\r\nconst SET_AUTH_DATA = 'network/auth/SET_AUTH_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    photo: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA: {\r\n            return { ...state, ...action.payload };\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return { ...state, ...action.payload };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthData = (userId, email, login, photo, isAuth) => ({\r\n    type: SET_AUTH_DATA,\r\n    payload: { userId, email, login, photo, isAuth },\r\n});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: { captchaUrl },\r\n});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const data = await authAPI.me();\r\n\r\n    if (data.resultCode === 0) {\r\n        const userId = data.data.id;\r\n        const email = data.data.email;\r\n        const login = data.data.login;\r\n\r\n        const profileData = await profileAPI.getProfile(userId);\r\n        dispatch(setAuthData(userId, email, login, profileData.photos.small, true));\r\n        return profileData;\r\n    }\r\n\r\n    return data;\r\n};\r\nexport const login = (formData) => (dispatch) => {\r\n    authAPI.login(formData)\r\n        .then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                if (data.resultCode === 10) {\r\n                    dispatch(getCaptchaUrl());\r\n                }\r\n                dispatch(stopSubmit('login', getErrors(data.messages)));\r\n            }\r\n        });\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    dispatch(getCaptchaUrlSuccess(data.url));\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    const data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthData(null, null, null, null, false));\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/user.ba422ca1.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userImg from '../../assets/imgs/user.png';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.logo} src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/RPC-JP_Logo.png\" />\r\n            <div className={s.authBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        <div>\r\n                            <div>\r\n                                <NavLink to={`/profile/${props.userId}`}>\r\n                                    <img className={s.userImg} src={props.photo || userImg} />\r\n                                    <div>{props.login}</div>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <button onClick={props.logout}>LogOut</button>\r\n                            </div>\r\n                        </div> :\r\n                        <NavLink to=\"/login\">LogIn</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { getAuthUserData, logout } from './../../redux/authReducer';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header userId={this.props.userId}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n                photo={this.props.photo}\r\n                isAuth={this.props.isAuth}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userId: state.auth.userId,\r\n    login: state.auth.login,\r\n    photo: state.auth.photo,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getAuthUserData, logout }),\r\n    withRouter,\r\n)(HeaderContainer);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\nimport { login } from './../../redux/authReducer';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({ error, handleSubmit, captchaUrl }) => {\r\n    if (!error) {\r\n        (() => { })();\r\n    };\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            {createField(Input, [required, maxLength30], 'email', { placeholder: \"Email\" })}\r\n        </div>\r\n        <div>\r\n            {createField(Input, [required, maxLength30], 'password', { placeholder: \"Password\" })}\r\n        </div>\r\n        <div>\r\n            {createField(Input, [], 'rememberMe', { type: 'checkbox', textAfter: ' remember me' })}\r\n        </div>\r\n        {\r\n            captchaUrl &&\r\n            <img src={captchaUrl} />\r\n        }\r\n        {\r\n            captchaUrl &&\r\n            <div>\r\n                {createField(Input, [required], 'captcha', { placeholder: 'Symbols form image' })}\r\n            </div>\r\n        }\r\n        {\r\n            error && <div className={styles.commonError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ isAuth, captchaUrl, login }) => {\r\n    if (isAuth)\r\n        return <Redirect to=\"/profile\" />\r\n\r\n    return <div>\r\n        <h2>Login page</h2>\r\n        <LoginReduxForm onSubmit={login} captchaUrl={captchaUrl} />\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from './../common/HOC/withAuthRedirect';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Music);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from './../common/HOC/withAuthRedirect';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(News);","import _ from 'lodash';\r\nimport { reset as resetForm, stopSubmit } from 'redux-form';\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\nimport { getErrors } from './../api/api';\r\n\r\nconst ADD_POST = 'network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'network/profile/SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS = 'network/profile/SET_PROFILE_STATUS';\r\nconst FETCHING_USER_PROFILE = 'network/profile/FETCHING_USER_PROFILE';\r\nconst SET_CURRENT_USER_ID = 'network/profile/SET_CURRENT_USER_ID';\r\nconst SAVE_PHOTO_SUCCESS = 'network/profile/SAVE_PHOTO_SUCCESS';\r\nconst TOGGLE_PROFILE_DATA_EDIT_MODE = 'network/profile/TOGGLE_PROFILE_DATA_EDIT_MODE';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi! Like this post!', likesCount: '25' },\r\n        { id: 2, message: 'Hello, friends!!!', likesCount: '12' },\r\n        { id: 3, message: 'My first post! :)', likesCount: '10' },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    isFetchingUserProfile: false,\r\n    currentUserId: null,\r\n    profileDataEditMode: false,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.text,\r\n                likesCount: '0',\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile };\r\n        }\r\n        case SET_PROFILE_STATUS: {\r\n            return { ...state, status: action.status };\r\n        }\r\n        case FETCHING_USER_PROFILE: {\r\n            return { ...state, isFetchingUserProfile: action.isFetching };\r\n        }\r\n        case SET_CURRENT_USER_ID: {\r\n            return { ...state, currentUserId: action.userId };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } };\r\n        }\r\n        case TOGGLE_PROFILE_DATA_EDIT_MODE: {\r\n            return { ...state, profileDataEditMode: !state.profileDataEditMode };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (text) => ({ type: ADD_POST, text });\r\nexport const setUserProfile = (profile) => (\r\n    { type: SET_USER_PROFILE, profile }\r\n);\r\nexport const setProfileStatus = (status) => (\r\n    { type: SET_PROFILE_STATUS, status }\r\n);\r\nexport const fetchingUserProfile = (isFetching) => (\r\n    { type: FETCHING_USER_PROFILE, isFetching }\r\n);\r\nexport const setCurrentUserId = (userId) => (\r\n    { type: SET_CURRENT_USER_ID, userId }\r\n);\r\nexport const savePhotoSuccess = (photos) => (\r\n    { type: SAVE_PHOTO_SUCCESS, photos }\r\n);\r\nexport const toggleProfileDataEditMode = () => (\r\n    { type: TOGGLE_PROFILE_DATA_EDIT_MODE }\r\n);\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(fetchingUserProfile(true));\r\n\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n    dispatch(fetchingUserProfile(false));\r\n};\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getProfileStatus(userId);\r\n    dispatch(setProfileStatus(data));\r\n};\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateProfileStatus(status);\r\n    if (data.resultCode === 0)\r\n        dispatch(setProfileStatus(status));\r\n};\r\nexport const resetPostForm = () => (dispatch) => {\r\n    dispatch(resetForm('post'));\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file);\r\n    if (data.resultCode === 0)\r\n        dispatch(savePhotoSuccess(data.data.photos));\r\n};\r\nconst checkUpdateProfileFormData = (formData) => {\r\n    const fixedContacts = Object.entries(formData.contacts).filter(([contact, address]) => address)\r\n        .filter(([contact, address]) => !address.includes('://'))\r\n        .map(([contact, address]) => [contact, `https://${address}`])\r\n        .reduce((acc, [contact, address]) => ({ ...acc, [contact]: address }), {});\r\n\r\n    return _.merge({ ...formData, contacts: { ...formData.contacts } }, { contacts: fixedContacts });\r\n};\r\nexport const updateProfileData = (formData) => (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const checkedFromData = checkUpdateProfileFormData(formData);\r\n\r\n    profileAPI.updateData({ userId, ...checkedFromData })\r\n        .then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(toggleProfileDataEditMode());\r\n                dispatch(getUserProfile(userId));\r\n            } else {\r\n                dispatch(stopSubmit('profile', getErrors(data.messages)));\r\n            }\r\n        });\r\n};\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({ message, likesCount }) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.img} src=\"https://miro.medium.com/max/1838/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\" />\r\n            {message}\r\n            <div>\r\n                <span>\r\n                    {likesCount} like\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators\";\r\nimport { createField, Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength5 = maxLengthCreator(5);\r\n\r\nconst PostForm = ({ handleSubmit }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            {createField(Textarea, [maxLength5], 'postText', { placeholder: \"Write a new post\" })}\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({ form: 'post' })(PostForm);","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport PostForm from './PostForm/PostForm';\r\n\r\nconst MyPosts = React.memo(({ posts, addPost, resetPostForm }) => {\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <PostForm onSubmit={({ postText }) => {\r\n                    addPost(postText);\r\n                    resetPostForm();\r\n                }} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {\r\n                    posts.map(({ id, message, likesCount }) =>\r\n                        <Post message={message} likesCount={likesCount} key={id} />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileData = ({ profile, goToEditMode, isOwner }) => {\r\n    const contacts = Object.entries(profile.contacts).filter(([name, address]) => address);\r\n\r\n    return <div>\r\n        {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n        {profile.aboutMe && <div><b>About me: </b>{profile.aboutMe}</div>}\r\n        {\r\n            profile.lookingForAJob &&\r\n            <span>\r\n                <div><b>Looking for a job</b></div>\r\n                <div><b>Description: </b>{profile.lookingForAJobDescription}</div>\r\n            </span>\r\n        }\r\n        {\r\n            contacts.length &&\r\n            <div>\r\n                <b>Contacts</b>\r\n                <div className={s.contactsList}>\r\n                    {contacts.map(([name, address]) => (\r\n                        <div key={name}>\r\n                            <a target=\"_blank\" href={address}>{name}</a>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>;\r\n}\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../utils/validators';\r\nimport { required } from './../../../utils/validators';\r\nimport { createField, Input, Textarea } from './../../common/FormsControls/FormsControls';\r\nimport stylesFormsControls from './../../common/FormsControls/FormsControls.module.css';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst ProfileForm = ({ error, handleSubmit }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {\r\n            error && <div className={stylesFormsControls.commonError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <div>\r\n            {createField(Input, [maxLength100, required], 'fullName', {\r\n                placeholder: 'full name',\r\n                textBefore: 'Full name: ',\r\n            })}\r\n            {createField(Input, [maxLength100, required], 'aboutMe', {\r\n                placeholder: 'Some info about you',\r\n                textBefore: 'About me: ',\r\n            })}\r\n            {createField(Input, [], 'lookingForAJob', {\r\n                type: 'checkbox',\r\n                textBefore: 'Are looking for a job? ',\r\n            })}\r\n            {createField(Textarea, [maxLength100, required], 'lookingForAJobDescription', {\r\n                placeholder: 'Describe what job you are looking for and about your skills',\r\n                textBefore: 'Looking for a job description: ',\r\n            })}\r\n            <div>\r\n                Your contacts:\r\n                <div className={s.contactsList}>\r\n                    {createField(Input, [maxLength100], 'contacts.github', {\r\n                        placeholder: 'github',\r\n                        textBefore: 'Github: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.vk', {\r\n                        placeholder: 'vk',\r\n                        textBefore: 'Vk: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.facebook', {\r\n                        placeholder: 'facebook',\r\n                        textBefore: 'Facebook: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.instagram', {\r\n                        placeholder: 'instagram',\r\n                        textBefore: 'Instagram: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.twitter', {\r\n                        placeholder: 'twitter',\r\n                        textBefore: 'Twitter: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.website', {\r\n                        placeholder: 'website',\r\n                        textBefore: 'Website: ',\r\n                    })}\r\n                    {createField(Input, [maxLength100], 'contacts.youtube', {\r\n                        placeholder: 'youtube',\r\n                        textBefore: 'YouTube: ',\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({ form: 'profile' })(ProfileForm);","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        if (editMode)\r\n            props.updateProfileStatus(status);\r\n\r\n        setEditMode(!editMode);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return <div>\r\n        {\r\n            !editMode ?\r\n                <span onDoubleClick={props.isOwner ? toggleEditMode : null}>{status || '-set-status-'}</span>\r\n                : <input onChange={onStatusChange} onBlur={toggleEditMode}\r\n                    autoFocus={true} value={status} />\r\n        }\r\n    </div>;\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport userImg from '../../../assets/imgs/user.png';\r\nimport Preloader from './../../common/Preloader/Preloader';\r\nimport ProfileData from './ProfileData';\r\nimport ProfileForm from './ProfileForm';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({\r\n    profile, isFetchingUserProfile, updateProfileStatus, status,\r\n    isOwner, savePhoto, goToEditMode, updateProfileData, editMode\r\n}) => {\r\n    const isProfileDataLoaded = !isFetchingUserProfile && profile;\r\n\r\n    const onSavePhoto = ({ currentTarget }) => {\r\n        if (currentTarget.files.length)\r\n            savePhoto(currentTarget.files[0])\r\n    };\r\n\r\n    return <> {\r\n        isProfileDataLoaded && <div>\r\n            <div className={s.bannerBlock}>\r\n                <img src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userImg} className={s.userPhoto} />\r\n                {isOwner && <input type='file' onChange={onSavePhoto} />}\r\n                <div>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateProfileStatus={updateProfileStatus} isOwner={isOwner} />\r\n                {\r\n                    editMode ?\r\n                        <ProfileForm onSubmit={updateProfileData} initialValues={profile} /> :\r\n                        <ProfileData profile={profile} goToEditMode={goToEditMode} isOwner={isOwner} />\r\n                }\r\n            </div>\r\n        </div> || <Preloader />\r\n    } </>;\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                status={props.status}\r\n                updateProfileStatus={props.updateProfileStatus}\r\n                isFetchingUserProfile={props.isFetchingUserProfile}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                goToEditMode={props.toggleProfileDataEditMode}\r\n                updateProfileData={props.updateProfileData}\r\n                editMode={props.profileDataEditMode} />\r\n            <MyPosts posts={props.posts}\r\n                addPost={props.addPost}\r\n                resetPostForm={props.resetPostForm} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport {\r\n    addPost, getProfileStatus, getUserProfile, resetPostForm,\r\n    setCurrentUserId, updateProfileStatus, savePhoto, toggleProfileDataEditMode,\r\n    updateProfileData\r\n} from './../../redux/profileReducer';\r\nimport { withAuthRedirect } from './../common/HOC/withAuthRedirect';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    getCurrentUserId() {\r\n        return Number.parseInt(this.props.match.params.userId) || this.props.authUserId;\r\n    }\r\n\r\n    getUserData(userId) {\r\n        this.props.setCurrentUserId(this.getCurrentUserId());\r\n        this.props.getUserProfile(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData(this.getCurrentUserId());\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getCurrentUserId() !== this.props.prevUserId) {\r\n            this.getUserData(this.getCurrentUserId());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateProfileStatus={this.props.updateProfileStatus}\r\n                    posts={this.props.posts}\r\n                    addPost={this.props.addPost}\r\n                    resetPostForm={this.props.resetPostForm}\r\n                    isFetchingUserProfile={this.props.isFetchingUserProfile}\r\n                    isOwner={this.props.authUserId === this.getCurrentUserId()}\r\n                    savePhoto={this.props.savePhoto}\r\n                    profileDataEditMode={this.props.profileDataEditMode}\r\n                    toggleProfileDataEditMode={this.props.toggleProfileDataEditMode}\r\n                    updateProfileData={this.props.updateProfileData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    posts: state.profilePage.posts,\r\n    isFetchingUserProfile: state.profilePage.isFetchingUserProfile,\r\n    prevUserId: state.profilePage.currentUserId,\r\n    authUserId: state.auth.userId,\r\n    profileDataEditMode: state.profilePage.profileDataEditMode\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getProfileStatus,\r\n        updateProfileStatus, resetPostForm,\r\n        addPost, setCurrentUserId,\r\n        savePhoto, toggleProfileDataEditMode,\r\n        updateProfileData\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from './../common/HOC/withAuthRedirect';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect\r\n)(Settings);","export const updateObjectInArray = (arr, objSearchParam, checkSearchVal, newObjParams) => {\r\n    return arr.map((item) => {\r\n        if (item[objSearchParam] === checkSearchVal)\r\n            return { ...item, ...newObjParams };\r\n\r\n        return item;\r\n    })\r\n};","import { updateObjectInArray } from '../utils/objectHelpers';\r\nimport { usersAPI } from './../api/api';\r\n\r\nconst FOLLOW = 'network/users/FOLLOW';\r\nconst UNFOLLOW = 'network/users/UNFOLLOW';\r\nconst SET_USERS = 'network/users/SET_USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'network/users/SET_TOTAL_USERS_COUNT';\r\nconst SET_PAGE_SIZE = 'network/users/SET_PAGE_SIZE';\r\nconst SET_CURRENT_PAGE = 'network/users/SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'network/users/TOGGLE_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, 'id', action.userId, { followed: true }),\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, 'id', action.userId, { followed: false }),\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: [...action.newUsers] };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case SET_PAGE_SIZE: {\r\n            return { ...state, pageSize: action.pageSize };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return (\r\n                action.isFollowing ?\r\n                    { ...state, followingInProgress: [...state.followingInProgress, action.userId] } :\r\n                    { ...state, followingInProgress: state.followingInProgress.filter((id) => id !== action.userId) }\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\n\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\n\r\nexport const setUsers = (newUsers) => ({ type: SET_USERS, newUsers });\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\n\r\nexport const setPageSize = (pageSize) => ({ type: SET_PAGE_SIZE, pageSize });\r\n\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nexport const toggleFollowingProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_FOLLOWING_PROGRESS,\r\n    isFollowing,\r\n    userId,\r\n});\r\n\r\n\r\nexport const requestUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, onSuccess) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    const data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0)\r\n        dispatch(onSuccess(userId));\r\n\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n    followUnfollowFlow(userId, dispatch, usersAPI.unfollow, unfollowSuccess);\r\n};\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n    followUnfollowFlow(userId, dispatch, usersAPI.follow, followSuccess);\r\n};\r\n\r\n\r\nexport default usersReducer;","import cn from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onChangePageNumber, portionSize = 10 }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const pages = Array.apply(null, Array(pagesCount))   // создаём пустой массив нужной длины\r\n        .map((val, idx) => idx + 1);                                            // заполняем его номерами страниц\r\n\r\n    const portionsCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>\r\n            }\r\n            {\r\n                pages.filter(pageNumber => (\r\n                    pageNumber >= leftPortionPageNumber && pageNumber <= rightPortionPageNumber\r\n                )).map(pageNumber => {\r\n                    return (\r\n                        <span\r\n                            key={pageNumber}\r\n                            className={cn({ [s.selected]: pageNumber === currentPage }, s.pageNumber)}\r\n                            onClick={() => onChangePageNumber(pageNumber)}\r\n                        >{pageNumber}</span>\r\n                    );\r\n                })\r\n            }\r\n            {\r\n                portionNumber < portionsCount &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userImg from '../../../assets/imgs/user.png';\r\nimport s from './User.module.css';\r\n\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.user}>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img className={s.photo} src={user.photos.small || userImg} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        user.followed ?\r\n                            <button disabled={followingInProgress.some((id) => id === user.id)}\r\n                                onClick={() => unfollow(user.id)}\r\n                            >Unfollow</button> :\r\n                            <button disabled={followingInProgress.some((id) => id === user.id)}\r\n                                onClick={() => follow(user.id)}\r\n                            >Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                {\r\n                    user.location ?\r\n                        <div>\r\n                            <div>{user.location.country}</div><div>{user.location.city}</div>\r\n                        </div> :\r\n                        null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from './Paginator/Paginator';\r\nimport User from './User/User';\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onChangePageNumber={props.onChangePageNumber} />\r\n            <div>\r\n                {props.users.map(u => (\r\n                    <User user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow}\r\n                        key={u.id} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersPrimitive = (state) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersPrimitive, (users) => (\r\n    users.filter(u => true)\r\n));\r\n\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\r\nexport const getPageSize = (state) => state.usersPage.pageSize;\r\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\r\nexport const getIsFetching = (state) => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, requestUsers } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/usersSelectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        const onChangePageNumber = (pageNumber) => this.props.requestUsers(pageNumber, this.props.pageSize);\r\n\r\n        return <>\r\n            {this.props.isFetching && <Preloader />}\r\n            <Users\r\n                users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onChangePageNumber={onChangePageNumber}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        requestUsers,\r\n    }),\r\n)(UsersContainer);","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'network/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return { ...state, isInitialized: true };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\n\r\nexport const initialize = () => (dispatch) => {\r\n    Promise.all([\r\n        dispatch(getAuthUserData()),\r\n    ]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.state = () => store.getState();\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { HashRouter, Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport './App.css';\r\nimport withSuspect from './components/common/HOC/withSuspect';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport Music from './components/Music/Music';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Settings from './components/Settings/Settings';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport { initialize } from './redux/appReducer';\r\nimport store from './redux/reduxStore';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass AppComponent extends Component {\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert(\"Error occurred: \" + promiseRejectionEvent.reason.message);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initialize();\r\n\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isInitialized)\r\n            return <Preloader />;\r\n\r\n        return (<div className=\"app-wrapper\">\r\n            <HeaderContainer />\r\n            <Navbar />\r\n            <div className=\"app-wrapper_content\">\r\n                <Switch >\r\n                    <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\r\n                    <Route path=\"/dialogs\" render={withSuspect(DialogsContainer)} />\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n                    <Route path=\"/users\" render={() => <UsersContainer />} />\r\n                    <Route path=\"/news\" render={() => <News />} />\r\n                    <Route path=\"/music\" render={() => <Music />} />\r\n                    <Route path=\"/settings\" render={() => <Settings />} />\r\n                    <Route path=\"/login/facebook\" render={() => <div>Facebook login page</div>} />\r\n                    <Route path=\"/login\" render={() => <Login />} />\r\n                    <Route path=\"*\" render={() => <div>404 Not found</div>} />\r\n                </Switch>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { isInitialized: state.app.isInitialized }\r\n};\r\n\r\nconst AppComponentContainer = compose(\r\n    connect(mapStateToProps, { initialize }),\r\n    withRouter,\r\n)(AppComponent);\r\n\r\nconst App = () => (\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <AppComponentContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n);\r\n\r\nexport default App;","import React, { Suspense } from \"react\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nexport default (Component) => (props) => {\r\n    return <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n    </Suspense>\r\n}","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nwindow.store = store;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        hasProfileUrlUserId = () => {\r\n            return (this.props.match.path === '/profile/:userId?' && this.props.match.params.userId);\r\n        }\r\n\r\n        render() {\r\n            if (!this.props.isAuth && !this.hasProfileUrlUserId())\r\n                return <Redirect to=\"/login\" />;\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        connect(mapStateToProps),\r\n        withRouter,\r\n    )(RedirectComponent);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FPvr\",\"error\":\"FormsControls_error__5ueAb\",\"errorText\":\"FormsControls_errorText__3SPMA\",\"commonError\":\"FormsControls_commonError__134vU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerBlock\":\"ProfileInfo_bannerBlock__-CO68\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__UAFdX\",\"userPhoto\":\"ProfileInfo_userPhoto__aI7jm\",\"contactsList\":\"ProfileInfo_contactsList__nbfGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__QyoLQ\",\"logo\":\"Header_logo__scy_r\",\"authBlock\":\"Header_authBlock__3pxx0\",\"userImg\":\"Header_userImg__y9CPW\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ meta, children }) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        <div>\r\n            <span className={styles.errorText}>{hasError ? meta.error : ''}</span>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;        // важно, чтобы obj: meta не попал в HTML input/textarea\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;        // важно, чтобы obj: meta не попал в HTML input/textarea\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (component, validate, name, { type, placeholder, textBefore, textAfter }) => {\r\n    return <div>\r\n        {textBefore && <div>\r\n            <b>{textBefore}</b>\r\n        </div>}\r\n        <div>\r\n            <Field component={component} name={name} placeholder={placeholder}\r\n                validate={validate} type={type} />\r\n        </div>\r\n        {textAfter && <div>\r\n            {textAfter}\r\n        </div>}\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2N1L1\",\"posts\":\"MyPosts_posts__2ITPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3ksB5\",\"img\":\"Post_img__2XeU3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__qwVOG\",\"selected\":\"Paginator_selected__1byaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2Bzoj\",\"photo\":\"User_photo__imNug\"};"],"sourceRoot":""}