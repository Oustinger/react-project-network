{"version":3,"sources":["components/Dialogs/Dialogs.module.css","redux/dialogs/dialogsSelectors.js","components/Dialogs/DialogForm/DialogForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","getDialogs","state","dialogsPage","dialogs","getAuthors","authors","getMessages","messages","getActiveDialogId","activeDialogId","maxLength150","maxLengthCreator","reduxForm","form","handleSubmit","onSubmit","className","cn","stylesFormsControls","s","createField","Textarea","placeholder","isMedium","float","DialogItem","id","name","activeId","path","to","dialogContainer","active","activeClassName","dialog","src","userImg","MessageItem","message","author","photoMe","message__me","message__companion","message__imgContainer","Dialogs","findCompanionById","onFormSubmit","companionName","dialogsItems","ShadowSection","map","dialogName","padding","messages__head","messages__itemsList","authorId","newMessageBlock","compose","connect","getPhotoLarge","addMessage","resetDialogForm","setActiveDialog","withRouter","withAuthRedirect","props","currentDialogId","Number","parseInt","match","params","dialogId","Preloader","find","companions","compId","comp","filter"],"mappings":"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","file":"static/js/3.79df3976.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2M_YM\",\"dialogsItems\":\"Dialogs_dialogsItems__3I3A_\",\"dialog\":\"Dialogs_dialog__9osXO\",\"dialogContainer\":\"Dialogs_dialogContainer__2h8-q\",\"active\":\"Dialogs_active__i5ozr\",\"messages\":\"Dialogs_messages__3btsB\",\"messages__head\":\"Dialogs_messages__head__3JN5_\",\"messages__itemsList\":\"Dialogs_messages__itemsList___7-Ao\",\"message\":\"Dialogs_message__1A00g\",\"message__me\":\"Dialogs_message__me__2-YVS\",\"message__companion\":\"Dialogs_message__companion__1xDdp\",\"newMessageBlock\":\"Dialogs_newMessageBlock__1JNEu\",\"form\":\"Dialogs_form__3QFrJ\"};","export const getDialogs = (state) => state.dialogsPage.dialogs;\r\nexport const getAuthors = (state) => state.dialogsPage.authors;\r\nexport const getMessages = (state) => state.dialogsPage.messages;\r\nexport const getActiveDialogId = (state) => state.dialogsPage.activeDialogId;","import cn from 'classnames';\r\nimport React from \"react\";\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from \"../../../utils/validators\";\r\nimport { createField, FormButton, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport stylesFormsControls from '../../common/FormsControls/FormsControls.module.css';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst maxLength150 = maxLengthCreator(150);\r\n\r\nconst DialogForm = ({ handleSubmit }) => {\r\n    return <form onSubmit={handleSubmit} className={cn(stylesFormsControls.form, s.form)}>\r\n        <div>\r\n            {createField(Textarea, [maxLength150], 'message', { placeholder: \"Write a message\" })}\r\n        </div>\r\n        <div>\r\n            <FormButton isMedium={true} float=\"right\">Send</FormButton>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({ form: 'dialog' })(DialogForm);","import cn from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userImg from '../../../assets/imgs/user.png';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = ({ id, name, activeId }) => {\r\n    const path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <NavLink to={path}\r\n            className={cn(s.dialogContainer, { [s.active]: activeId === id })}\r\n            activeClassName={s.active}\r\n        >\r\n            <div className={s.dialog} >\r\n                <img src={userImg} />\r\n                <span>{name}</span>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\nimport userImg from '../../../assets/imgs/user.png';\r\n\r\nconst MessageItem = ({ message, author, photoMe }) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {\r\n                author.id === 0 ?\r\n                    <div className={s.message__me}>\r\n                        <span>{message}</span>\r\n                        <img src={photoMe || userImg} />\r\n                    </div>\r\n                    : <div className={s.message__companion}>\r\n                        <div className={s.message__imgContainer}>\r\n                            <img src={userImg} />\r\n                        </div>\r\n                        <span>{message}</span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageItem;","import ShadowSection from '../common/ShadowSection/ShadowSection';\r\nimport DialogForm from './DialogForm/DialogForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport MessageItem from './MessageItem/MessageItem';\r\n\r\nconst Dialogs = ({\r\n    dialogs, findCompanionById, messages, onFormSubmit,\r\n    photoMe, activeDialogId, companionName,\r\n}) => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <ShadowSection>\r\n                    {\r\n                        dialogs.map(({ id, dialogName }) => (\r\n                            <DialogItem name={dialogName} id={id} key={id} activeId={activeDialogId} />\r\n                        ))\r\n                    }\r\n                </ShadowSection>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <ShadowSection padding=\".9rem\">\r\n                    {\r\n                        activeDialogId ?\r\n                            <>\r\n                                <div className={s.messages__head}>\r\n                                    <h2>Dialog with <b>{companionName}</b></h2>\r\n                                    <hr></hr>\r\n                                </div>\r\n                                <div className={s.messages__itemsList}>\r\n                                    {\r\n                                        messages.map(({ id, authorId, message }) => (\r\n                                            <MessageItem message={message} key={id} photoMe={photoMe}\r\n                                                author={findCompanionById(authorId)} />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <div className={s.newMessageBlock}>\r\n                                    <DialogForm onSubmit={onFormSubmit} />\r\n                                </div>\r\n                            </>\r\n                            : <div><b>Chose the dialog</b></div>\r\n                    }\r\n                </ShadowSection>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { addMessage, resetDialogForm, setActiveDialog } from '../../redux/dialogs/dialogsReducer';\r\nimport { getActiveDialogId, getAuthors, getDialogs, getMessages } from '../../redux/dialogs/dialogsSelectors';\r\nimport { getPhotoLarge } from './../../redux/auth/authSelectors';\r\nimport { withAuthRedirect } from './../common/HOC/withAuthRedirect';\r\nimport Preloader from './../common/Preloader/Preloader';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst DialogContainer = (props) => {\r\n    const currentDialogId = Number.parseInt(props.match.params.dialogId) || props.activeDialogId;\r\n\r\n    if (currentDialogId && (currentDialogId !== props.activeDialogId)) {\r\n        props.setActiveDialog(currentDialogId);\r\n        return <Preloader />;\r\n    }\r\n\r\n    const onFormSubmit = ({ message }) => {\r\n        props.addMessage({ message, dialogId: props.activeDialogId });\r\n        props.resetDialogForm();\r\n    };\r\n\r\n    const findCompanionById = (authorId) => props.authors.find(({ id }) => id === authorId);\r\n\r\n    const companionName = props.activeDialogId &&\r\n        props.dialogs.find(({ id }) => id === props.activeDialogId)\r\n            .companions\r\n            .map(compId => findCompanionById(compId))\r\n            .map(comp => comp.name)[0];\r\n\r\n    return <Dialogs dialogs={props.dialogs}\r\n        messages={props.messages.filter(({ dialogId }) => dialogId === props.activeDialogId)}\r\n        activeDialogId={props.activeDialogId}\r\n        photoMe={props.photoMe}\r\n        companionName={companionName}\r\n        findCompanionById={findCompanionById}\r\n        onFormSubmit={onFormSubmit} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: getDialogs(state),\r\n    authors: getAuthors(state),\r\n    messages: getMessages(state),\r\n    photoMe: getPhotoLarge(state),\r\n    activeDialogId: getActiveDialogId(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage, resetDialogForm, setActiveDialog }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(DialogContainer);"],"sourceRoot":""}